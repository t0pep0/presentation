package main

import (
	"regexp"
)

const data = `Программа мероприятия:
‣ «Декораторы в Go» — Максим Чечель.
В язык Go заложены такие крутые идеи как: каналы, горутины, утиная типизация, быстрый сборщик мусора и т.д. Однако, мы, как разработчики, часто страдаем от того, что нам нужно писать какой-то рутинный код. В своем докладе я расскажу каким способом можно автоматизировать эту рутину и попутно решить типичные инженерные проблемы возникающие в процессе разработки.

‣ «gonetmap - обработка пакетов на скорости провода» — Роман Тимофеев.
В докладе расскажу как и зачем появился gonetmap - pure go интерфейс netmap. Т.к. параллельно создавался еще и вариант на python, то в докладе затрону вопрос плюсов и минусов каждого из языков для подобных задач. Расскажу что в Go помогает писать такие вещи и чего стоит избегать, почему каналы и мьютексы - это очень медленно, а "Know your hardware!" - не просто красивый слоган.

‣ «Способы синхронизации при параллельном программировании» — Егор Лукаш.
Поговорим о примитивах синхронизации: в результате чего они появились и как они помогают решать задачи в мультизадачных и распределенных системах. Рассмотрим ряд популярных проблем и примеры их решения с помощью postgresql и consul.`

const rexp = `[a-zA-Z]{2,10}`

func RegexpNotCompile() []string {
	lLetter := regexp.MustCompile(rexp)
	return lLetter.FindAllString(data, -1)
}

var lLetter = regexp.MustCompile(rexp)

func RegexpCompile() []string {
	return lLetter.FindAllString(data, -1)
}
